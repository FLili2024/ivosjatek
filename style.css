<!DOCTYPE html>
<html lang="hu">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Felelsz vagy Iszol</title>
  <style>
    /* TEST √©s ALAPOK */
    body {
      margin: 0;
      height: 100vh;
      background: black;
      overflow: hidden;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      color: #e0d7ff; /* halv√°ny neon lila */
      display: flex;
      justify-content: center;
      align-items: center;
      background: radial-gradient(circle at center, #330066, #000000 70%);
      position: relative;
    }

    /* H√ÅTT√âR MOZG√ì CS√çKOK */
    body::before, body::after {
      content: "";
      position: fixed;
      width: 200%;
      height: 200%;
      top: -50%;
      left: -50%;
      pointer-events: none;
      z-index: 1;
      background:
        repeating-linear-gradient(
          45deg,
          transparent,
          transparent 10px,
          rgba(182,76,255,0.1) 10px,
          rgba(182,76,255,0.1) 20px
        );
      animation: moveBackground 30s linear infinite;
      opacity: 0.2;
    }

    body::after {
      background:
        repeating-linear-gradient(
          -45deg,
          transparent,
          transparent 15px,
          rgba(255,115,0,0.15) 15px,
          rgba(255,115,0,0.15) 30px
        );
      animation-direction: reverse;
      opacity: 0.15;
    }

    @keyframes moveBackground {
      0% { background-position: 0 0; }
      100% { background-position: 1000px 1000px; }
    }

    /* KONTAINER */
    .container {
      background: rgba(25, 0, 50, 0.85);
      border-radius: 15px;
      padding: 25px 30px;
      box-shadow:
        0 0 15px #ff7300,
        0 0 40px #a64400,
        0 0 60px #aa6600;
      width: 90%;
      max-width: 600px;
      text-align: center;
      border: 2px solid #b64cff; /* neon lila keret */
      position: relative;
      z-index: 10;
    }

    /* C√çM */
    h1 {
      color: #b64cff;
      text-shadow:
        0 0 5px #b64cff,
        0 0 10px #ff7300,
        0 0 20px #b64cff;
      font-weight: 700;
      font-size: 2.8rem;
      margin-bottom: 15px;
      animation: neonGlow 3s ease-in-out infinite;
    }

    @keyframes neonGlow {
      0% {
        text-shadow:
          0 0 5px #b64cff,
          0 0 10px #ff7300,
          0 0 15px #b64cff;
      }
      50% {
        text-shadow:
          0 0 20px #ff7300,
          0 0 40px #b64cff,
          0 0 60px #ff7300;
      }
      100% {
        text-shadow:
          0 0 5px #b64cff,
          0 0 10px #ff7300,
          0 0 15px #b64cff;
      }
    }

    /* INPUTOK, LABEL, P, H2 */
    label, input, p, h2 {
      margin: 10px 0;
      display: block;
      width: 100%;
      color: #d1baff;
      font-weight: 600;
      text-shadow: 0 0 5px #b64cff99;
    }

    input {
      padding: 12px 15px;
      font-size: 1rem;
      border-radius: 8px;
      border: 2px solid #b64cff;
      background-color: #1a0033;
      color: #e0d7ff;
      box-shadow: inset 0 0 5px #b64cff;
      transition: border-color 0.3s ease;
      max-width: 100%;
    }

    input:focus {
      border-color: #ff7300;
      outline: none;
      box-shadow: 0 0 10px #ff7300;
    }

    /* GOMBOK */
    button {
      background-color: #ff7300;
      border: none;
      padding: 14px 28px;
      margin: 10px 6px;
      font-size: 1.1rem;
      border-radius: 12px;
      cursor: pointer;
      font-weight: 600;
      color: #fff;
      box-shadow:
        0 0 10px #ff7300,
        0 0 20px #b64cff;
      transition: all 0.3s ease;
      text-transform: uppercase;
      letter-spacing: 0.08em;
      user-select: none;
      max-width: 100%;
      display: inline-block;
    }

    button:hover, button:focus {
      background-color: #b64cff;
      box-shadow:
        0 0 15px #b64cff,
        0 0 30px #ff7300;
      color: #fff;
      outline: none;
    }

    /* GOMB SOR */
    .button-row {
      display: flex;
      justify-content: center;
      gap: 15px;
      flex-wrap: wrap;
    }

    /* EREDM√âNY */
    #eredmeny {
      font-size: 1.3rem;
      margin-top: 20px;
      color: #b64cff;
      text-shadow: 0 0 10px #b64cff;
      min-height: 3rem;
    }

    /* FOOTER */
    footer {
      margin-top: 35px;
      font-size: 0.85rem;
      color: #aa7300;
      text-shadow: 0 0 3px #aa7300;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Felelsz vagy Iszol ü•≥</h1>

    <div class="input-section">
      <label for="jatekosok">J√°t√©kosok (vessz≈ëvel):</label>
      <input type="text" id="jatekosok" placeholder="Anna, Bence, Csilla" />
      <button onclick="inditas()">J√°t√©k ind√≠t√°sa</button>
    </div>

    <div id="jatek" class="game-section" style="display:none;">
      <h2 id="aktualisJatekos"></h2>
      <p>Felelsz vagy iszol?</p>
      <div class="button-row">
        <button onclick="valasztott('F')">Felelek</button>
        <button onclick="valasztott('I')">Iszom</button>
      </div>
      <p id="eredmeny"></p>
      <button onclick="kovetkezo()">K√∂vetkez≈ë j√°t√©kos</button>
    </div>

    <footer>K√©sz√≠tette: <strong>Nova</strong></footer>
  </div>

  <script>
    let jatekosLista = [];
    let jelenlegiIndex = 0;
    let kerdesek = [];

    async function inditas() {
      const input = document.getElementById("jatekosok").value;
      jatekosLista = input.split(",").map(n => n.trim()).filter(n => n);
      if (jatekosLista.length === 0) return alert("Adj meg legal√°bb egy j√°t√©kost!");

      kerdesek = await kerdeseketBetolt();
      if (kerdesek.length === 0) return alert("Nem siker√ºlt bet√∂lteni a k√©rd√©seket.");

      document.querySelector(".input-section").style.display = "none";
      document.getElementById("jatek").style.display = "block";
      jelenlegiIndex = 0;
      megjelenitJatekost();
    }

    async function kerdeseketBetolt() {
      try {
        const res = await fetch("kerdesek.txt");
        const text = await res.text();
        return text.split("\n").map(s => s.trim()).filter(s => s);
      } catch (err) {
        console.error("Hiba a kerdesek betoltesenel", err);
        return [];
      }
    }

    function megjelenitJatekost() {
      document.getElementById("eredmeny").textContent = "";
      const jatekos = jatekosLista[jelenlegiIndex];
      document.getElementById("aktualisJatekos").textContent = `${jatekos} k√∂vetkezik!`;
    }

    function valasztott(valasztas) {
      const eredmeny = document.getElementById("eredmeny");
      if (valasztas === "F") {
        const kerdes = kerdesek[Math.floor(Math.random() * kerdesek.length)];
        eredmeny.textContent = `K√©rd√©s: ${kerdes}`;
      } else {
        eredmeny.textContent = "Igy√°l egyet! üçª";
      }
    }

    function kovetkezo() {
      jelenlegiIndex = (jelenlegiIndex + 1) % jatekosLista.length;
      megjelenitJatekost();
    }
  </script>
</body>
</html>
